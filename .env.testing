# Este [.env.testing] se levanta solo cuando el entorno de ejecución está marcado como "testing".
# Laravel setea el entorno a ese valor automáticamente cuando están ejecutándose tests.
# Acá podemos definir qué valores queremos que se usen cuando se testea la aplicación, sin tener que tocar
# nada de los valores que usamos en otros "entornos", como el de desarrollo o local.
APP_URL=http://localhost:8000
APP_DEBUG=true

# A la hora de testear nuestro código que trabaja con una base de datos SQL, es una práctica común en Laravel
# usar una base de datos SQLite en memoria, en vez de la base real, ya sea MySQL, MariaDB, Postgre, etc.
# Esto tiene algunos beneficios:
# - En general, SQLite es más rápida que las otras bases, aunque tiene menos chiches.
# - SQLite permite crear bases de datos en memoria, es decir, que no se escriben en discto. Esto hace que sea
#   aún mucho más rápida.
# - No interfiere con la base de datos que estemos usando realmente para las pruebas locales (o producción).
# Hay un problema que podría presentarse normalmente: La sintaxis de SQL de SQLite no es igual en todos los
# aspectos a la de MySQL, que tampoco es igual a la de MariaDB, que tampoco es igual a la de Postgre, etc.
# Si estamos usando el Query Builder (o Eloquent) de Laravel para nuestras interacciones, el framework se
# encarga de generar automáticamente el código SQL adecuado para la base de datos que indiquemos. Es decir,
# nuestro mismo código funciona correctamente con cualquiera de las bases SQL soportadas.
DB_CONNECTION=sqlite
DB_DATABASE=:memory:

# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=bmx_street
# DB_USERNAME=root
# DB_PASSWORD=
